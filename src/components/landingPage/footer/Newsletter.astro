---
import Paragraph from "@components/ui/Paragraph";
import Title from "@components/ui/Title";
---

<div>
  <Title> Soyez les premiers informés ! </Title>
  <Paragraph className="mb-6">
    Inscrivez-vous à notre liste d'attente pour être notifiés dès le lancement
    et bénéficier d'avantages exclusifs réservés aux premiers utilisateurs.
  </Paragraph>
  <!-- <h3 class="text-lg mb-4 font-saeada">Newsletter</h3>
  <p class="text-zinc-600 text-sm mb-3">
    Restez informés des dernières nouveautés et astuces pour optimiser votre
    apprentissage collaboratif.
  </p> -->
  <form method="post" id="newsletter-form" class="flex items-start gap-4 mt-2">
    <div class="flex flex-col justify-start flex-1">
      <input
        type="email"
        id="email-input"
        name="email"
        aria-label="Adresse email"
        autocomplete="email"
        placeholder="Votre adresse email"
        class="px-4 py-2 w-full min-h-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 outline-none"
        required
      />
      <div class="flex mt-2">
        <input
          type="checkbox"
          id="privacy-checkbox"
          name="privacy-checkbox"
          aria-label="J'accepte la politique de confidentialité"
          class="cursor-pointer w-4 h-4 border-gray-300 rounded-lg text-white accent-emerald-400 focus:outline-none outline-none"
          required
        />
        <label for="privacy-checkbox" class="text-sm text-zinc-600">
          J'ai lu et j'accepte la{" "}
          <a
            href="/politique-de-confidentialite"
            target="_blank"
            class="text-emerald-500 hover:underline"
          >
            politique de confidentialité
          </a>{" "}
          et je consens à recevoir des communications de Mindlet.
        </label>
      </div>
    </div>

    <button
      type="submit"
      class="px-4 py-2 min-h-12 bg-emerald-500 hover:bg-emerald-600 text-white font-medium rounded-lg transition-colors"
    >
      Me tenir informé
    </button>
  </form>
  <div id="newsletter-message" class="mt-2 text-sm hidden"></div>
</div>

<script>
  import { MINDLET_API_URL } from "astro:env/client";

  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("newsletter-form") as HTMLFormElement;
    const messageDiv = document.getElementById(
      "newsletter-message"
    ) as HTMLDivElement;

    if (form) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const formData = new FormData(form);

        const email = formData.get("email");
        const privacyCheckbox = formData.get("privacy-checkbox");
        if (!email) {
          showMessage("Veuillez entrer une adresse email valide.", "error");
          return;
        }
        if (!privacyCheckbox || privacyCheckbox !== "on") {
          showMessage(
            "Veuillez accepter la politique de confidentialité.",
            "error"
          );
          return;
        }

        // Afficher un message de chargement
        showMessage("Inscription en cours...", "loading");

        try {
          const response = await fetch(
            `${MINDLET_API_URL}/newsletters/subscribe`,
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ email, privacy_policy_accepted: true }),
            }
          );

          const data = await response.json();

          if (response.ok) {
            // Succès
            showMessage(
              "Merci de vous être abonné à la newsletter de Mindlet ! Vous recevrez nos dernières mises à jour et astuces directement dans votre boîte mail.",
              "success"
            );
            form.reset();
          } else {
            // Erreur côté serveur
            showMessage(
              data.message || "Une erreur est survenue. Veuillez réessayer.",
              "error"
            );
          }
        } catch (error) {
          // Erreur de connexion
          showMessage(
            "Impossible de se connecter au serveur. Veuillez vérifier votre connexion et réessayer.",
            "error"
          );
          console.error("Erreur:", error);
        }
      });
    }

    function showMessage(text: string, type: "success" | "error" | "loading") {
      messageDiv.textContent = text;
      messageDiv.classList.remove(
        "hidden",
        "text-emerald-600",
        "text-red-600",
        "text-zinc-600"
      );

      switch (type) {
        case "success":
          messageDiv.classList.add("text-emerald-600");
          break;
        case "error":
          messageDiv.classList.add("text-red-600");
          break;
        case "loading":
          messageDiv.classList.add("text-zinc-600");
          break;
      }
    }
  });
</script>
